LIST FUNCTIONS

- append: runs in O(1) constant time
- insert(index, value): O(n) time
- remove: runs in O(n) time
- pop(index): runs in O(1) time for the last element, and O(k) for kth item removed
- reverse: runs in O(n) time

SLICING

list[start:end]

list[start:] means all numbers greater than start uptil the range

list[:end] means all numbers less than end uptil the range

list[:] means all numbers within the range

list[start:stop:step]

EXAMPLE:
list = list(range(10)) # define a range of values 0
print(list[0:9:2])  # 0, 2, 4, 6, 8  
print(list[9:0:-2])  # 9, 7, 5, 3, 1

arr[start:end] = [list, of, New, values]

EXAMPLE:
x = list(range(5))
print(x)  # 0, 1, 2, 3, 4
x[1:4] = [45, 21, 83]
print(x)  # 0, 45, 21, 83, 4

The del keyword is used to delete elements from a list. 
In the following example, all the elements at even-numbered indices are deleted.

list = list(range(10))
print(list)  # 0, 1, 2, 3, 4, 5, 6, 7, 8, 9
del list[::2]
print(list)  # 1, 3, 5, 7, 9

We can use negative numbers to begin indexing the list elements from the end. For example, 
to access the fifth-last element of a list, we use:
list[-5]

We can also use slicing techniques on strings since strings are lists of characters! 
(well, technically, theyâ€™re arrays of characters)
